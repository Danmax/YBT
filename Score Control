// Velo API Reference: https://www.wix.com/velo/reference/api-overview/introduction
import { local, session, memory } from 'wix-storage-frontend';

$w.onReady(function () {

    let Team1Points = getSessionPoints() || 0; // Get the initial points from the session cache
    getPoints()

    function getPoints() {
        $w('#Team1Points').text = getSessionPoints().toString()
        $w('#Team1Points').show()

    }

    $w('#Team1Plus').onClick(() => {

        let sliderPoint = $w('#Team1Slider').value
        Team1Points = addPoint(Team1Points, sliderPoint);
        $w('#Team1Points').text = Team1Points.toString()
        $w('#Team1Points').show()
        saveSessionPoints(Team1Points); // Save the updated points to the session cache
        console.log(Team1Points);
    });

    $w('#Team1Minus').onClick(() => {
        let sliderPoint = $w('#Team1Slider').value
        Team1Points = minusPoint(Team1Points, sliderPoint);
        $w('#Team1Points').text = Team1Points.toString()
        $w('#Team1Points').show()
        saveSessionPoints(Team1Points); // Save the updated points to the session cache
        console.log(Team1Points);
    });

    $w('#Team1Mult').onClick(() => {
        let sliderPoint = $w('#Team1Slider').value
        Team1Points = multPoint(Team1Points, sliderPoint);
        $w('#Team1Points').text = Team1Points.toString()
        $w('#Team1Points').show()
        saveSessionPoints(Team1Points); // Save the updated points to the session cache
        console.log(Team1Points);
    });

    $w('#Team1Divide').onClick(() => {
        let sliderPoint = $w('#Team1Slider').value
        Team1Points = divPoint(Team1Points, sliderPoint);
        $w('#Team1Points').text = Team1Points.toString()
        $w('#Team1Points').show()
        saveSessionPoints(Team1Points); // Save the updated points to the session cache

    });

    $w('#removeTeam1Points').onClick(() => {
        let key = 'Team1Points'
        removePoints(key)
        Team1Points = 0
        $w('#Team1Points').text = Team1Points.toString()
        $w('#Team1Points').show()
    });

});

function addPoint(points, add) {
    let total = points + add;
    let desc = `The previous points was ${points} then added ${add} for a new total of ${total} points`
    console.log(desc) // You can add logic here to save game session information if needed
    return total;
}

function minusPoint(points, minus) {
    let total = (points - minus);
    let desc = `The previous points was ${points} then minus ${minus} for a new total of ${total} points`
    console.log(desc)
    // You can add logic here to save game session information if needed
    return total;
}

function multPoint(points, mult) {
    let total = points * mult;
    let desc = `The previous points was ${points} then multiplied by ${mult} for a new total of ${total} points`
    console.log(desc) // You can add logic here to save game session information if needed
    return total;
}

function divPoint(points, div) {
    let total = points / div;
    let desc = `The previous points was ${points} then divided by ${div} for a new total of ${total} points`
    console.log(desc) // You can add logic here to save game session information if needed
    return total;
}

function getSessionPoints() {
    // Get the current points from the session cache
    return Number(session.getItem('Team1Points'));
}

function saveSessionPoints(points) {
    // Save the points to the session cache
    session.setItem('Team1Points', points.toString());
}

function removePoints(key) {
    session.removeItem(key)
}
